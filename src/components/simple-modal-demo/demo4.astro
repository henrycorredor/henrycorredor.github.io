---
import SimpleModal from 'astro-simple-modal'
---

<div class="flex">
  <button type="button" id="modal-demo-4" class="
  text-white bg-gray-800 rounded-lg text-sm px-5 py-2.5 me-2 mb-2 cursor-pointer">
    Launch modal
  </button>
  <div class="demo-4-callback-led flex items-center">
    Modal in transition
  </div>
</div>
<SimpleModal id="demo-4" styles={{
  transitionDuration: '2s'
}}>
  <div style="color: black;">
    <p>Basic modal content</p>
    <p>
      This is a basic modal display, without using any special feature.
    </p>
    <div class="demo-4-callback-led flex items-center">
      Modal in transition
    </div>
    <button type="button" id="close-modal-demo-4" class="
  text-white bg-gray-800 rounded-lg text-sm px-5 py-2.5 me-2 mb-2 cursor-pointer">
      Close modal with transition callback
    </button>
  </div>
</SimpleModal>

<style>
  @keyframes blink-led {
    0%, 100% {
      background-color: #19d719;
    }
    50% {
      background-color: #1a4b1a;
    }
  }

  .demo-4-callback-led::before {
    content: "";
    display: block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: red;
    margin-right: .5rem;
    transition: background-color 0.2s;
  }

  .demo-4-callback-led.on-duty::before {
    animation: blink-led 0.4s steps(1, start) infinite;
  }
</style>

<script>
  import {modalHandler} from "astro-simple-modal"

  const leds = document.querySelectorAll('.demo-4-callback-led')

  document.getElementById('modal-demo-4')?.addEventListener('click', () => {
    leds.forEach(elem => elem.classList.add('on-duty'))
    modalHandler.open('demo-4').then(()=>{
      leds.forEach(elem => elem.classList.remove('on-duty'))
    })
  })

  document.getElementById('close-modal-demo-4')?.addEventListener('click', () => {
    leds.forEach(elem => elem.classList.add('on-duty'))
    modalHandler.close('demo-4').then(()=>{
      leds.forEach(elem => elem.classList.remove('on-duty'))
    })
  })
</script>